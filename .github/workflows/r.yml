name: R-CMD-check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        r-version: ['4.1.1', '4.2.1', 'devel']

    steps:
      - uses: actions/checkout@v4

      # Configurar R con la versión especificada
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      # Configurar Pandoc
      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      # Instalar dependencias del sistema necesarias para `arrow` y construcción de viñetas
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff-dev \
            libjpeg-dev \
            cmake \
            make \
            g++ \
            qpdf \
            texlive-base \
            texlive-latex-base \
            texlive-fonts-recommended \
            texlive-latex-recommended \
            texlive-extra-utils \
            texlive-latex-extra

      # Instalar el paquete `arrow` utilizando binarios si es posible
      - name: Install 'arrow' package
        run: |
          install.packages("arrow")
        shell: Rscript {0}

      # Instalar dependencias del paquete en R
      - name: Install R package dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      # Verificar el paquete con rcmdcheck
      - name: Check R package
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(error_on = "error")
        shell: Rscript {0}
